apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    compileSdkVersion 30
    buildToolsVersion '30.0.2'
    defaultConfig {
        applicationId 'com.crakac.ofuton'
        minSdkVersion 14
        targetSdkVersion 30
        versionCode 36
        versionName '2.1.6'
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            applicationIdSuffix '.debug'
            minifyEnabled false
        }
        applicationVariants.all { variant ->
            def twitterProps = getProps("app/twitter.properties")
            variant.buildConfigField "String", "TWITTER_API_KEY", "\"" + twitterProps["key"] + "\""
            variant.buildConfigField "String", "TWITTER_API_SECRET", "\"" + twitterProps["secret"] + "\""
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'AndroidManifest.xml'
        exclude 'LICENSE.txt'
    }

    productFlavors {
    }
}

repositories {
    mavenCentral()
}


dependencies {
    ext {
        glide_version = "4.11.0"
    }
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.exifinterface:exifinterface:1.2.0'
    implementation 'com.github.chrisbanes:PhotoView:2.1.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation ('com.github.esafirm.android-image-picker:imagepicker:1.13.1'){
        exclude module: 'com.github.bumptech.glide'
    }
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"
}

static def getProps(String key) {
    Properties props = new Properties()
    props.load(new FileInputStream(new File(key)))
    return props
}
